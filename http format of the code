const http = require('http');
const bodyParser = require('body-parser'); // For parsing JSON request bodies
const mysql = require('mysql'); // Replace with the appropriate database library

const port = 3000; // Choose a port for your API

// Create a database connection
const db = mysql.createConnection({
    host: 'your_database_host',
    user: 'your_database_user',
    password: 'your_database_password',
    database: 'your_database_name'
});

// Connect to the database
db.connect(err => {
    if (err) {
        console.error('Error connecting to the database:', err);
        return;
    }
    console.log('Connected to the database');
});

const server = http.createServer((req, res) => {
    res.setHeader('Content-Type', 'application/json');

    // Parse JSON request bodies
    if (req.method === 'POST' && req.url === '/books') {
        let body = '';
        req.on('data', (chunk) => {
            body += chunk;
        });

        req.on('end', () => {
            try {
                const data = JSON.parse(body);
                // Insert a new book into the database
                const { title, author } = data;
                const query = 'INSERT INTO books (title, author) VALUES (?, ?)';
                db.query(query, [title, author], (err, results) => {
                    if (err) {
                        console.error('Error inserting a new book into the database:', err);
                        res.statusCode = 500;
                        res.end(JSON.stringify({ error: 'An error occurred while adding a book.' }));
                        return;
                    }
                    res.statusCode = 200;
                    res.end(JSON.stringify({ message: 'Book added successfully.' }));
                });
            } catch (error) {
                res.statusCode = 400;
                res.end(JSON.stringify({ error: 'Invalid JSON data.' }));
            }
        });
    } else if (req.method === 'GET' && req.url === '/books') {
        // Query the database to retrieve a list of books
        const query = 'SELECT * FROM books';
        db.query(query, (err, results) => {
            if (err) {
                console.error('Error querying the database:', err);
                res.statusCode = 500;
                res.end(JSON.stringify({ error: 'An error occurred while fetching books.' }));
                return;
            }
            res.statusCode = 200;
            res.end(JSON.stringify(results));
        });
    } else {
        res.statusCode = 404;
        res.end(JSON.stringify({ error: 'Not Found' }));
    }
});

server.listen(port, () => {
    console.log(`Server is running on port ${port}`);
});
